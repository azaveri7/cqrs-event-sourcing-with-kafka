===============
Docker
===============

docker --version

docker ps -a

docker network create --attachable -d bridge techbankNet

docker network ls

docker-compose --version

===============
Kafka
===============

Note: use the docker-compose.yml present in root directory and not the one in Materials folder.

The one in the Materials folder mention latest tag for Kafka, and latest Kafka version does not use zookeeper



docker-compose up -d

The above command install kafka broker and zookeeper listed in docker-compose file

===============
MongoDB setup
===============

docker run -it -d --name mongo-container -p 27017:27017 --network techbankNet --restart always -v mongo_data_container:/data/db mongo:latest

===============
MySQL setup
===============

docker run -it -d --name mysql-container -p 3306:3306 --network techbankNet -e MYSQL_ROOT_PASSWORD=techbankRootPwd --restart always -v mysql__data_container:/var/lib/mysql mysql:latest

docker run -it -d --name adminer -p 8080:8080 --network techbankNet -e ADMINER_DEFAULT_SERVER=mysql-container --restart always adminer:latest


=================
Mediator Pattern
=================

Behavioral design Pattern

Promotes loose coupling by preventing objects from referring to each other explicitly.

Simplifies communication between objects by introducing a single object known as the
mediator that manages the distribution of messages among other objects.

=================
Aggregate
=================

An Aggregate is an entity or group  of entities that is always kept in  a consistent state.

The Aggregate root is the entity within the Aggregate that is responsible for maintaining
this consistent state.

This makes the Aggregate the primary building block for implementing a command model in any
CQRS based application.
